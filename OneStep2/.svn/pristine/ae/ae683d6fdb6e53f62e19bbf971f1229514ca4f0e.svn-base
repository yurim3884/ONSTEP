package kr.or.ddit.main.controller;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import kr.or.ddit.company.service.ICompanyService;
import kr.or.ddit.member.service.IMemService;
import kr.or.ddit.member.vo.MemberVO;
import kr.or.ddit.member.vo.SupportVO;
import kr.or.ddit.vo.AnnoVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j // lombok 추가 후 사용 가능 // SLF4J(Simple Logging Facade for Java)는 이름에서 확인할 수 있듯이. java.util.logging, logback 및 log4j와 같은 다양한 로깅 프레임 워크에 대한 추상화(인터페이스) 역할을 하는 라이브러리
@Controller
@RequestMapping("/")
public class mainController {
	
	@Inject
	private ICompanyService comService;
	@Inject
	private IMemService memService;
	
	@RequestMapping(value="/member/main", method = RequestMethod.GET)
	public String listGet(Model model, HttpServletRequest req) {
		log.info("HTTP 메서드 매핑");
		log.info("listGet()");
		
		List<AnnoVO> annoList = comService.annoList();
		model.addAttribute("annoList", annoList);
		//관심기업 정보
		HttpSession session = req.getSession();
		MemberVO vo = (MemberVO)session.getAttribute("memberVO");
		List<SupportVO> supList = memService.getSupportList(vo.getMemId());
		model.addAttribute("supList", supList);
		String comId = "";
		for (int i = 0; i < supList.size(); i++) {
			comId += supList.get(i).getComId();
			if(i != supList.size() - 1){
				comId += ",";
			}
		}
		model.addAttribute("comIdGroup", comId);
		model.addAttribute("supList", supList);
		System.out.println(annoList);
		return "member/main";
	}
	
	@RequestMapping(value="/main2", method = RequestMethod.GET)
	public String lis(Model model) {
		log.info("HTTP 메서드 매핑");
		log.info("listGet()");
		
		List<AnnoVO> annoList = comService.annoList();
		model.addAttribute("annoList", annoList);
		System.out.println(annoList);
		return "main/main";
	}
	
	
	
	

}
