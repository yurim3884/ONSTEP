package kr.or.ddit.board.controller;

import java.util.HashMap;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.board.service.IGoodService;
import kr.or.ddit.vo.GoodVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/good")
public class GoodController {

	@Inject
	private IGoodService goodService;
	
	@RequestMapping(value="odd", method=RequestMethod.GET)
	public void findGood(GoodVO goodVO) {
		goodService.findGood(goodVO);
		
	}
	
	
	/* Controller */
    //좋아요 눌렀을때
    @RequestMapping("/clickLike")
    @ResponseBody
    public Map<String,Object> clickLike(@RequestParam Map<String,Object> commandMap){
        logger.info("request: /clickLike");
        int resultCode = 1;
        int likecheck = 1;
        Map<String,Object> map = new HashMap<>();
        Map<String,Object> likecntMap = new HashMap<>();
        Map<String,Object> resultMap = new HashMap<>();
        try {
            map = service.likecheck(commandMap);
            if(map == null) {
                //처음 좋아요 누른것 likecheck=1, 좋아요 빨간색이 되야됨
                service.insertLikeBtn(commandMap); //좋아요 테이블 인서트
                service.updateLikeCntPlus(commandMap); //bbs 테이블 업데이트 +1
                resultCode = 1;
            }
            else if(Integer.parseInt(map.get("likecheck").toString()) == 0) {
                //좋아요 처음은 아니고 취소했다가 다시 눌렀을때 likecheck=1, 좋아요 빨간색 되야됨
                commandMap.put("likecheck",likecheck);
                service.updateLikeCheck(commandMap); //좋아요 테이블 업데이트
                service.updateLikeCntPlus(commandMap); // bbs테이블 +1
                resultCode = 1;
            }
            else {
                //좋아요 취소한거 likecheck=0, 빈하트 되야됨
                likecheck = 0;
                commandMap.put("likecheck", likecheck);
                service.updateLikeCheck(commandMap);
                service.updateLikeCntMinus(commandMap);
                resultCode = 0;
            }
            resultMap = service.getLikeCnt(commandMap); 
            // 해당 게시글 테이블의 likecnt칼럼  update가 끝난후 likecnt값 가져옴
            resultMap.put("likecheck", likecheck);
        } catch (Exception e) {
            logger.debug(e.getMessage());
            resultCode = -1;
        }
        
        resultMap.put("resultCode", resultCode);
        //resultCode가 1이면 빨간하트 0이면 빈하트
        return resultMap;
    }

}
